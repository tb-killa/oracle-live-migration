name: Build Oracle Migration Live ISO

on:
  push:
    branches: [ main ]
  schedule:
    - cron:  '0 2 * * *'   # täglich 02:00 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: oraclelinux:9
    permissions:
      contents: write  # notwendig für Release-Upload via GITHUB_TOKEN

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache für ISO (spart 8GB Download)
      - name: Cache Oracle ISO
        id: cache-iso
        uses: actions/cache@v4
        with:
          path: migration-live/OracleLinux-R9-U3-x86_64-dvd.iso
          key: oraclelinux-9u3-dvd

      - name: Download Oracle Linux 9 DVD (falls nicht im Cache)
        if: steps.cache-iso.outputs.cache-hit != 'true'
        run: |
          mkdir -p migration-live
          echo "Lade Oracle Linux 9 ISO..."
          curl -L -o migration-live/OracleLinux-R9-U3-x86_64-dvd.iso \
            https://download.oracle.com/otn-pub/isos/oraclelinux/OL9/u3/x86_64/OracleLinux-R9-U3-x86_64-dvd.iso

      # Cache für DNF, um Buildzeiten zu reduzieren
      - name: Cache DNF packages
        uses: actions/cache@v4
        with:
          path: /var/cache/dnf
          key: dnf-cache-${{ runner.os }}-${{ hashFiles('overlay/root/install-tools.sh') }}

      # Installiert Buildtools + EPEL (für p7zip)
      - name: Install build dependencies
        run: |
          echo "Aktualisiere Paketquellen..."
          dnf -y install oracle-epel-release-el9
          dnf -y update
          echo "Installiere benötigte Build-Tools..."
          dnf -y install genisoimage rsync wget xorriso p7zip diffutils coreutils util-linux zip tar

      # Haupt-Build-Schritt
      - name: Build ISO
        run: |
          chmod +x build_migration_iso.sh
          bash -x ./build_migration_iso.sh > build.log 2>&1

      # Paket-Änderungen als Changelog dokumentieren
      - name: Generate changelog
        run: |
          mkdir -p migration-live
          if [ -f migration-live/old_pkgs.txt ]; then
            diff -u migration-live/old_pkgs.txt migration-live/new_pkgs.txt > migration-live/CHANGELOG.txt || true
          else
            cp migration-live/new_pkgs.txt migration-live/CHANGELOG.txt
          fi
          cp migration-live/new_pkgs.txt migration-live/old_pkgs.txt

      # ISO in 7z komprimieren
      - name: Compress ISO
        run: |
          cd migration-live
          7z a oracle-migration-live.7z oracle-migration-live.iso

      # Upload der Artefakte
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: oracle-migration-live
          path: |
            migration-live/oracle-migration-live.iso
            migration-live/oracle-migration-live.7z
            migration-live/CHANGELOG.txt

      # Automatisches Release mit Changelog und Version
      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Oracle Migration Live v${{ github.run_number }}"
          body_path: migration-live/CHANGELOG.txt
          files: |
            migration-live/oracle-migration-live.iso
            migration-live/oracle-migration-live.7z
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
