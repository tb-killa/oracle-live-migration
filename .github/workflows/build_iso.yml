name: Build Oracle Migration Live ISO

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"  # t√§glicher Build um 02:00 UTC

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: oraclelinux:9

    steps:
      # ----------------------------------------------------------
      # üß© Repository vorbereiten und pr√ºfen
      # ----------------------------------------------------------
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Preflight-Check
        run: |
          echo "=== Repository Struktur pr√ºfen ==="
          find . -maxdepth 3 -type f
          test -f build_migration_iso.sh && echo "‚úÖ Gefunden: build_migration_iso.sh"
          test -f overlay/usr/local/bin/migration-gui.sh && echo "‚úÖ Gefunden: migration-gui.sh"
          test -f overlay/root/install-tools.sh && echo "‚úÖ Gefunden: install-tools.sh"
          test -f overlay/etc/systemd/system/migration-autostart.service && echo "‚úÖ Gefunden: autostart.service"

          # CRLF-Zeilenenden pr√ºfen und korrigieren
          if file build_migration_iso.sh | grep -q CRLF; then
            echo "‚ö†Ô∏è  CRLF-Zeilenenden gefunden ‚Äì korrigiere..."
            sed -i 's/\r$//' build_migration_iso.sh
          else
            echo "‚úÖ Keine CRLF-Zeilenenden gefunden."
          fi

          # Ausf√ºhrungsrechte setzen
          chmod +x build_migration_iso.sh || true
          chmod +x overlay/usr/local/bin/migration-gui.sh || true
          echo "=== Preflight-Check bestanden ==="

      # ----------------------------------------------------------
      # üß± Cache (ISO + DNF)
      # ----------------------------------------------------------
      - name: Cache Oracle ISO
        id: cache-iso
        uses: actions/cache@v4
        with:
          path: migration-live/OracleLinux-R9-U3-x86_64-dvd.iso
          key: oraclelinux-9u3-dvd

      - name: Cache DNF Packages
        id: cache-dnf
        uses: actions/cache@v4
        with:
          path: /var/cache/dnf
          key: dnf-cache-${{ runner.os }}-${{ hashFiles('**/build_migration_iso.sh') }}

      # ----------------------------------------------------------
      # üîΩ ISO Download (wenn nicht gecached)
      # ----------------------------------------------------------
      - name: Download Oracle Linux 9 ISO
        if: steps.cache-iso.outputs.cache-hit != 'true'
        run: |
          mkdir -p migration-live
          echo "üîß Installiere wget..."
          dnf -y install wget
          echo "üì¶ Lade Oracle Linux 9 ISO (ca. 9 GB) ‚Äì bitte Geduld..."
          wget -q --show-progress -O migration-live/OracleLinux-R9-U3-x86_64-dvd.iso \
            https://mirrorservice.org/sites/repo.oracle.com/ol/9/ISO-OL9-u3-x86_64-dvd.iso
          echo "‚úÖ Download abgeschlossen."

      # ----------------------------------------------------------
      # ‚öôÔ∏è Build-Abh√§ngigkeiten installieren
      # ----------------------------------------------------------
      - name: Install build dependencies
        run: |
          dnf -y install oracle-epel-release-el9
          dnf -y update
          dnf -y install \
            p7zip p7zip-plugins rsync wget xorriso mkisofs bsdtar \
            diffutils coreutils util-linux zip tar unzip \
            libisofs libisoburn libburn

      # ----------------------------------------------------------
      # üß∞ ISO-Build durchf√ºhren
      # ----------------------------------------------------------
      - name: Build ISO
        run: |
          echo "üöÄ Starte ISO-Build..."
          bash ./build_migration_iso.sh || { echo "‚ùå Build fehlgeschlagen ‚Äì siehe Log"; exit 1; }

      # ----------------------------------------------------------
      # üì§ Artefakte hochladen
      # ----------------------------------------------------------
      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: oracle-migration-live
          path: |
            migration-live/oracle-migration-live.iso
            migration-live/new_pkgs.txt
